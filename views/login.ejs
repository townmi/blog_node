<!doctype html>
<html lang="en">
<head>
	<% include head_meta.ejs %>
	<title><%= title %></title>
	<link rel="stylesheet" type="text/css" href="../css/reset.css">
	<style type="text/css">
	.ui_captcha{
		height: 30px;
		width: 25%;
		margin-left: 15px;
		vertical-align: top;
		border: none;
	}
	</style>
</head>
<body>
	
	<% include head.ejs %>

	<div class="ui_center clear" id="js_center">
		<div class="ui_login">
			
			<form action="" class="js_form">
				<p class="ui_input_line">
					<label for="username" class="ui_label">管理员:</label>
					<input type="text" id="username" class="ui_base_text js_reg" method="username" value="abcd12345678哈哈">
				</p>
				<p class="ui_input_line">
					<label for="password" class="ui_label">口令:</label>
					<input type="text" id="password" class="ui_base_text js_reg" method="password" value="abcd1234">
				</p>
				<p class="ui_input_line">
					<label for="captcha" class="ui_label">验证码:</label>
					<input type="text" id="captcha" class="ui_base_text js_reg" style="width:20%;" method="captcha" value="1234">
					<img src="" alt="" class="ui_captcha">
				</p>
				<p class="ui_input_line" style="margin-top: 30px;">
					<a href="javascript:;" class="ui_btn js_submit desabled">登陆</a>
				</p>
			</form>
		</div>
	</div>

	<% include foot.ejs %>

</body>
<script type="text/javascript" src="../js/src/jquery.js"></script>
<script type="text/javascript">
	var base = {
		username : /^[A-Za-z0-9\u4E00-\u9FA5]+$/,
		phone : /^1[3,4,5,7,8]{1}[0-9]{9}$/,
		email : /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,
		password:/^(?!\d+$)(?![a-zA-Z]+$)[0-9a-zA-Z]{6,18}$/,
		nickname : /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$|^1[3,4,5,7,8]{1}[0-9]{9}$/,
		identity : /^\d{17}[\d,x,X]$/,
		bankcard : /^\d{16,19}$/,
		chinname : /^[\u4E00-\u9FA5]{2,5}(?:·[\u4E00-\u9FA5]{2,5})*$/,
		captcha : /^\w{4}$/,
		meassage : {
			username : ["用户名不能为空","用户名格式错误"],
			phone : ["手机号码不能为空！", "请输入正确手机号！"],
			email : ["邮箱格式有误"],
			password : ["密码不能为空！","密码格式错误","密码不正确"],
			nickname : ["昵称只能用中文、英文、数字组合"],
			identity : ["身份证格式错误"],
			checkIdCard : ["身份证号码错误"],
			bankcard : ["银行卡格式错误"],
			chinname : ["中文姓名格式有误"],
			captcha : ["验证码不能为空！","验证码格式错误！"]
		}
	};

	jQuery.fn.tip = function(config){

		// 默认参数集合
		var config = $.extend(true,{
			color : "#00589E",
			excursion_X : 0,
			excursion_Y : 0,
			beforeFun : function(){},
			afterFun : function(){},
			destory : false
		}, config);

		config.beforeFun();

		var POS_KEY = $(this).attr("data-pos") ? $(this).attr("data-pos") : "right";
		var key_bool = "", ID = "";

		// 当前DOM元素有无指向ID，查找tipDOM元素
		if($(this).attr("direct")){
			key_bool = $(this).attr("direct");
			tip = $("#"+key_bool);
			if(config.destory){
				$(this).attr("direct","");
				return tip.remove();
			}
		}else{
			if(config.destory) return;
			var KEY = new Date().getTime();
			$(this).attr("direct","ui_tip"+KEY);
			ID = "ui_tip"+KEY;
		}
		// 当前DOM元素的POS
		var tar_L = $(this).offset().left;
		var tar_T = $(this).offset().top;
		var tar_W = $(this).outerWidth();
		var tar_H = $(this).outerHeight();
		
		if(!key_bool){
			// 如果这个dom元素没有绑定tip的话，生成一个
			var tip = $("<div>",{
				"class": "ui_tip",
				"style": "visibility: hidden;",
				"id": ID
			}).appendTo($("body"));

			$("<div>",{
				"class": "ui_arrow "+ POS_KEY
			}).appendTo(tip);

			$("<span>",{
				"class": "ui_content"
			}).appendTo(tip);

			tip.find(".ui_content").html($(this).attr("data-title"));

		}else{
			// 已经绑定过tip的直接跳过创建
			tip.find(".ui_content").html($(this).attr("data-title"));
			tip.find(".ui_arrow")[0].className = "ui_arrow "+ POS_KEY;

		}
		
		// tip内容变化, pos变化
		var tip_W = tip.outerWidth();
		var tip_H = tip.outerHeight();
		var tip_L, tip_T;

		switch(POS_KEY){
			case "left":
				tip_L = tar_L - tip_W - 10 + config.excursion_X;
				tip_T = tar_T - (tip_H-tar_H)/2 + config.excursion_Y;
				break;
			case "top":
				tip_L = tar_L - (tip_W-tar_W)/2 + config.excursion_X;
				tip_T = tar_T - tip_H - 10 + config.excursion_Y;
				break;
			case "right":
				tip_L = tar_L + tar_W + 10 + config.excursion_X;
				tip_T = tar_T - (tip_H-tar_H)/2 + config.excursion_Y;
				break;
			case "bottom":
				tip_L = tar_L - (tip_W-tar_W)/2 + config.excursion_X;
				tip_T = tar_T + tip_H + 10 + config.excursion_Y;
				break;
			default:
				tip_L = 0 + config.excursion_X;
				tip_T = 0 + config.excursion_Y;
		}	
		// 设置边框的颜色、文字的颜色。手动。
		tip.css({"border-color" : config.color}).find(".ui_content").css("color",config.color);
		tip.find(".ui_arrow").css("border-color", "transparent").css("border-"+POS_KEY+"-color", config.color);
		// 呈现tip
		tip.css({"left": tip_L, "top" : tip_T, "visibility" : "visible"}).hide().fadeIn(400,config.afterFun);

	};
</script>
<script type="text/javascript">

	$(".js_reg").each(function (i, e){

		var form_parent = $(this).parents(".js_form");
		$(e).attr("grade","0");
		var color = ["#00589E", "red", "green"];

		$(e).attr("data-class", e.className).on("blur", function (){

			var method = $(this).attr("method");
			var baseClass = $(this).attr("data-class");

			if(!$(this).val()){

				this.className = baseClass+" ui_text_error";
				if(method === "captcha"){
					$(this).attr({"data-title": base.meassage[method][0],"data-pos": "left"}).tip({color: color[1]});
				}else{
					$(this).attr({"data-title": base.meassage[method][0],"data-pos": "right"}).tip({color: color[1]});
				}
				$(this).attr("grade","0");


			}else if(!$(this).val().match(base[method])){

				this.className = baseClass+" ui_text_error";
				if(method === "captcha"){
					$(this).attr({"data-title": base.meassage[method][1],"data-pos": "bottom"}).tip({color: color[1]});
				}else{
					$(this).attr({"data-title": base.meassage[method][1],"data-pos": "right"}).tip({color: color[1]});
				}
				$(this).attr("grade","0");

			}else{

				this.className = baseClass+" ui_text_success";
				$(this).tip({destory: true});
				$(this).attr("grade","1");

			}
			// 算得分》满分通过
			var grade = 0;
			$(".js_reg").each(function (i, e){

				var key = parseInt( $(e).attr("grade") );
				grade += key; 

			});

			if(grade === $(".js_reg").length){
				form_parent.find(".js_submit").removeClass("desabled");
			}else{
				form_parent.find(".js_submit").removeClass("desabled").addClass("desabled");
			}

		});

	});

	$(".js_submit").on("click", function (){

		$(".js_reg").blur();
		if($(this).hasClass("desabled")) return;

		var b = new Base64();
		var color = ["#00589E", "red", "green"];

		$.ajax({
			type: "post",
			url: "/login",
			data: {
				"username" : b.encode( $("#username").val() ),
				"password": b.encode( $("#password").val() ),
				"captcha": b.encode( $("#captcha").val() )
			},
			dataType: "json",
			success: function (data) {
				if(data.status){
					window.location.reload();
				}else{
					var baseClass = $(".js_reg[method="+data.method+"]").attr("data-class");
					$(".js_reg[method="+data.method+"]")[0].className = baseClass+" ui_text_error";
					$(".js_reg[method="+data.method+"]").attr("grade","0").attr("data-title",data.mesg).tip({color: color[1]});
					
					// 算得分》满分通过
					var grade = 0;
					$(".js_reg").each(function (i, e){
						var key = parseInt( $(e).attr("grade") );
						grade += key; 
					});
					if(grade === $(".js_reg").length){
						$(".js_submit").removeClass("desabled");
					}else{
						$(".js_submit").removeClass("desabled").addClass("desabled");
					}
				}
			},
			error: function (msg) {
			   	
			}

		})

	});
	
	$(".js_reg").on("keydown", function (e){
		if(e.keyCode === 13) $(".js_submit").click();
	})
	
</script>
<script type="text/javascript">
	function Base64() {  
	   
	    // private property  
	    _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";  
	   
	    // public method for encoding  
	    this.encode = function (input) {  
	        var output = "";  
	        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;  
	        var i = 0;  
	        input = _utf8_encode(input);  
	        while (i < input.length) {  
	            chr1 = input.charCodeAt(i++);  
	            chr2 = input.charCodeAt(i++);  
	            chr3 = input.charCodeAt(i++);  
	           enc1 = chr1 >> 2;  
	           enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);  
	            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);  
	            enc4 = chr3 & 63;  
	            if (isNaN(chr2)) {  
	                enc3 = enc4 = 64;  
	            } else if (isNaN(chr3)) {  
	                enc4 = 64;  
	           }  
	            output = output +  
	            _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +  
	            _keyStr.charAt(enc3) + _keyStr.charAt(enc4);  
	        }  
	        return output;  
	    }  
	   
	    // public method for decoding  
	    this.decode = function (input) {  
	        var output = "";  
	       var chr1, chr2, chr3;  
	        var enc1, enc2, enc3, enc4;  
	       var i = 0;  
	       input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");  
	       while (i < input.length) {  
	           enc1 = _keyStr.indexOf(input.charAt(i++));  
	           enc2 = _keyStr.indexOf(input.charAt(i++));  
	           enc3 = _keyStr.indexOf(input.charAt(i++));  
	            enc4 = _keyStr.indexOf(input.charAt(i++));  
	            chr1 = (enc1 << 2) | (enc2 >> 4);  
	            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);  
	           chr3 = ((enc3 & 3) << 6) | enc4;  
	            output = output + String.fromCharCode(chr1);  
	            if (enc3 != 64) {  
	               output = output + String.fromCharCode(chr2);  
	            }  
	           if (enc4 != 64) {  
	               output = output + String.fromCharCode(chr3);  
	            }  
	        }  
	        output = _utf8_decode(output);  
	        return output;  
	    }  
	   
	    // private method for UTF-8 encoding  
	   _utf8_encode = function (string) {  
	        string = string.replace(/\r\n/g,"\n");  
	        var utftext = "";  
	       for (var n = 0; n < string.length; n++) {  
	           var c = string.charCodeAt(n);  
	            if (c < 128) {  
	                utftext += String.fromCharCode(c);  
	            } else if((c > 127) && (c < 2048)) {  
	              utftext += String.fromCharCode((c >> 6) | 192);  
	               utftext += String.fromCharCode((c & 63) | 128);  
	            } else {  
	                utftext += String.fromCharCode((c >> 12) | 224);  
	                utftext += String.fromCharCode(((c >> 6) & 63) | 128);  
	               utftext += String.fromCharCode((c & 63) | 128);  
	            }  
	   
	        }  
	        return utftext;  
	   }  
	   
	    // private method for UTF-8 decoding  
	    _utf8_decode = function (utftext) {  
	        var string = "";  
	        var i = 0;  
	       var c = c1 = c2 = 0;  
	        while ( i < utftext.length ) {  
	           c = utftext.charCodeAt(i);  
	            if (c < 128) {  
	               string += String.fromCharCode(c);  
	                i++;  
	            } else if((c > 191) && (c < 224)) {  
	                c2 = utftext.charCodeAt(i+1);  
	               string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));  
	                i += 2;  
	          } else {  
	                c2 = utftext.charCodeAt(i+1);  
	                c3 = utftext.charCodeAt(i+2);  
	               string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));  
	               i += 3;  
	           }  
	       }  
	       return string;  
	    }  
	}
</script>
<script type="text/javascript">
	$(function (){

    	var TOBOOTOM =  $(window).height() - $("body").height();

    	var w1 = $("#js_center").height();

    	if(TOBOOTOM>0){

    		$("#js_center").css({
    			"height" : TOBOOTOM+w1
    		});

    	}

	})
</script>
</html>